name: 🎡 ci
on:
  push:
    branches: [main]
  pull_request:
  workflow_dispatch:
concurrency: ci-${{ github.ref }} # to prevent collisions on the release job
jobs:
  pack_preview: # reports yarn pack results to the PR
    name: 📦 pack_preview
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - uses: actions/checkout@v2
      - uses: ./.github/actions/pack_preview
  new_dependencies: # reports package.json dependencies change to the PR
    name: 🤝 new_dependencies
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - uses: actions/checkout@v2
      - uses: hiwelo/new-dependencies-action@1.0.1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
  commitlint:
    name: 🖋 commitlint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0 # get all git history, commitlint needs full history
      - uses: ./.github/actions/setup_yarn
      - if: github.event_name == 'pull_request'
        run: yarn commitlint --from ${{ github.event.pull_request.base.sha }} --to ${{ github.event.pull_request.head.sha }} --verbose
      - if: github.event_name == 'push'
        run: yarn commitlint --from ${{ github.after }} --verbose
  typecheck:
    name: 🔬 typecheck
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: ./.github/actions/setup_yarn
      - run: yarn typecheck
  lint:
    name: 🧵 lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: ./.github/actions/setup_yarn
      - run: yarn lint
  test:
    name: 💯 test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: ./.github/actions/setup_yarn
      - run: yarn test
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
  all_checks_ok: # This job does nothing and is only used for the branch protection
    runs-on: ubuntu-latest
    needs: [commitlint, typecheck, lint, test]
    steps:
      - name: Decide whether the needed jobs succeeded or failed
        uses: re-actors/alls-green@release/v1
        with:
          jobs: ${{ toJSON(needs) }}
  release:
    name: 🚀 release
    runs-on: ubuntu-latest
    needs: [all_checks_ok]
    if: github.ref_name == 'main' && github.ref_type == 'branch' # since we only want to release on main branch
    steps:
      - uses: actions/checkout@v2
      - uses: ./.github/actions/setup_yarn
      - run: yarn build
      - run: yarn release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          GIT_AUTHOR_NAME: ${{ github.event.pusher.name }} # to override the default author `semantic-release-bot` of the release commit
          GIT_AUTHOR_EMAIL: ${{ github.event.pusher.email }} # same reason above
          GIT_COMMITTER_NAME: github-actions[bot] # same reason above
          GIT_COMMITTER_EMAIL: github-actions[bot]@users.noreply.github.com # same reason above
